version: '3.7'

services:
  api01: &api
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api01
    ports:
      - "8081:8080"
    depends_on:
      - postgresql_db
    environment:
      - DATABASE_URL=jdbc:postgresql://postgresql_db:5432/transactiondb
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "200MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      - DATABASE_URL=jdbc:postgresql://postgresql_db:5432/transactiondb
    ports:
      - "8082:8080"

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api01
      - api02
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "10MB"

  postgresql_db:
    image: 'postgres:15.2-alpine'
    restart: always
    ports:
      - "5433:5432"
    container_name: postgresql_db
    environment:
      - POSTGRES_DB=transactiondb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    networks:
      - app_network
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "90MB"

networks:
  app_network:
    driver: bridge
